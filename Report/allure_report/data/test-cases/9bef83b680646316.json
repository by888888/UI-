{"uid":"9bef83b680646316","name":"test_steps_demo[pytest]","fullName":"Test.TestCase.test_baidu#test_steps_demo","historyId":"4465dbb546c5d8f87186171312d3d13a","time":{"start":1673327545126,"stop":1673327554955,"duration":9829},"status":"broken","statusMessage":"FileNotFoundError: [Errno 2] No such file or directory: './result/b.png'","statusTrace":"test_data1 = 'pytest'\n\n    @allure.testcase(\"http://www.github.com\")\n    @allure.feature(\"百度搜索\")\n    @pytest.mark.parametrize('test_data1', ['allure', 'pytest', 'unittest'])\n    def test_steps_demo(test_data1):\n        with allure.step(\"打开百度网页\"):\n            driver = webdriver.Chrome(\"D:/chromedriver/chromedriver.exe\")\n            driver.get(\"http://www.baidu.com\")\n    \n        with allure.step(\"搜索关键词\"):\n            driver.find_element_by_id(\"kw\").send_keys(test_data1)\n            time.sleep(2)\n            driver.find_element_by_id(\"su\").click()\n            time.sleep(2)\n    \n        with allure.step(\"保存图片\"):\n            driver.save_screenshot(\"./result/b.png\")\n>           allure.attach.file(\"./result/b.png\", attachment_type=allure.attachment_type.PNG)\n\nTest\\TestCase\\test_baidu.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python\\lib\\site-packages\\allure_commons\\_allure.py:203: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nD:\\python\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nD:\\python\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nD:\\python\\lib\\site-packages\\allure_pytest\\listener.py:233: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nD:\\python\\lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nD:\\python\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nD:\\python\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nD:\\python\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nD:\\python\\lib\\shutil.py:434: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = './result/b.png'\ndst = 'E:\\\\DFX_UI\\\\Report\\\\report\\\\3d15f781-581c-4618-a7c9-a094272b9e4c-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: './result/b.png'\n\nD:\\python\\lib\\shutil.py:254: FileNotFoundError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1673327536304,"stop":1673327536381,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"FileNotFoundError: [Errno 2] No such file or directory: './result/b.png'","statusTrace":"test_data1 = 'pytest'\n\n    @allure.testcase(\"http://www.github.com\")\n    @allure.feature(\"百度搜索\")\n    @pytest.mark.parametrize('test_data1', ['allure', 'pytest', 'unittest'])\n    def test_steps_demo(test_data1):\n        with allure.step(\"打开百度网页\"):\n            driver = webdriver.Chrome(\"D:/chromedriver/chromedriver.exe\")\n            driver.get(\"http://www.baidu.com\")\n    \n        with allure.step(\"搜索关键词\"):\n            driver.find_element_by_id(\"kw\").send_keys(test_data1)\n            time.sleep(2)\n            driver.find_element_by_id(\"su\").click()\n            time.sleep(2)\n    \n        with allure.step(\"保存图片\"):\n            driver.save_screenshot(\"./result/b.png\")\n>           allure.attach.file(\"./result/b.png\", attachment_type=allure.attachment_type.PNG)\n\nTest\\TestCase\\test_baidu.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python\\lib\\site-packages\\allure_commons\\_allure.py:203: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nD:\\python\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nD:\\python\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nD:\\python\\lib\\site-packages\\allure_pytest\\listener.py:233: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nD:\\python\\lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nD:\\python\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nD:\\python\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nD:\\python\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nD:\\python\\lib\\shutil.py:434: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = './result/b.png'\ndst = 'E:\\\\DFX_UI\\\\Report\\\\report\\\\3d15f781-581c-4618-a7c9-a094272b9e4c-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: './result/b.png'\n\nD:\\python\\lib\\shutil.py:254: FileNotFoundError","steps":[{"name":"打开百度网页","time":{"start":1673327545126,"stop":1673327550714,"duration":5588},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"搜索关键词","time":{"start":1673327550714,"stop":1673327554847,"duration":4133},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"保存图片","time":{"start":1673327554847,"stop":1673327554954,"duration":107},"status":"broken","statusMessage":"FileNotFoundError: [Errno 2] No such file or directory: './result/b.png'\n","statusTrace":"  File \"E:\\DFX_UI\\Test\\TestCase\\test_baidu.py\", line 25, in test_steps_demo\n    allure.attach.file(\"./result/b.png\", attachment_type=allure.attachment_type.PNG)\n  File \"D:\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 203, in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_hooks.py\", line 265, in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_manager.py\", line 80, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_callers.py\", line 60, in _multicall\n    return outcome.get_result()\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_result.py\", line 60, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\python\\lib\\site-packages\\allure_pytest\\listener.py\", line 233, in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n  File \"D:\\python\\lib\\site-packages\\allure_commons\\reporter.py\", line 160, in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_hooks.py\", line 265, in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_manager.py\", line 80, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_callers.py\", line 60, in _multicall\n    return outcome.get_result()\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_result.py\", line 60, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"D:\\python\\lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\python\\lib\\site-packages\\allure_commons\\logger.py\", line 53, in report_attached_file\n    shutil.copy2(source, destination)\n  File \"D:\\python\\lib\\shutil.py\", line 434, in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n  File \"D:\\python\\lib\\shutil.py\", line 254, in copyfile\n    with open(src, 'rb') as fsrc:\n","steps":[],"attachments":[{"type":"image/png","size":0}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":3,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"百度搜索"},{"name":"parentSuite","value":"Test.TestCase"},{"name":"suite","value":"test_baidu"},{"name":"host","value":"V031"},{"name":"thread","value":"14828-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Test.TestCase.test_baidu"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"test_data1","value":"'pytest'"}],"links":[{"name":"http://www.github.com","url":"http://www.github.com","type":"test_case"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9bef83b680646316.json","parameterValues":["'pytest'"]}